{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/add-prevoznik/add-prevoznik.component.css","webpack:///./src/app/admin/add-prevoznik/add-prevoznik.component.html","webpack:///./src/app/admin/add-prevoznik/add-prevoznik.component.ts","webpack:///./src/app/admin/add-putanja/add-putanja.component.css","webpack:///./src/app/admin/add-putanja/add-putanja.component.html","webpack:///./src/app/admin/add-putanja/add-putanja.component.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/getallrezervacije/getallrezervacije.component.css","webpack:///./src/app/admin/getallrezervacije/getallrezervacije.component.html","webpack:///./src/app/admin/getallrezervacije/getallrezervacije.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/model/error.model.ts","webpack:///./src/app/model/prevoznik.model.ts","webpack:///./src/app/model/ruta.model.ts","webpack:///./src/app/model/user.model.ts","webpack:///./src/app/pages/error/error.component.css","webpack:///./src/app/pages/error/error.component.html","webpack:///./src/app/pages/error/error.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/navbar/navbar.component.css","webpack:///./src/app/pages/navbar/navbar.component.html","webpack:///./src/app/pages/navbar/navbar.component.ts","webpack:///./src/app/pages/pages-routing.module.ts","webpack:///./src/app/pages/pages.module.ts","webpack:///./src/app/prevoznici/get/get.component.css","webpack:///./src/app/prevoznici/get/get.component.html","webpack:///./src/app/prevoznici/get/get.component.ts","webpack:///./src/app/prevoznici/getputanja/getputanja.component.css","webpack:///./src/app/prevoznici/getputanja/getputanja.component.html","webpack:///./src/app/prevoznici/getputanja/getputanja.component.ts","webpack:///./src/app/prevoznici/prevoznici-routing.module.ts","webpack:///./src/app/prevoznici/prevoznici.module.ts","webpack:///./src/app/services/error.service.ts","webpack:///./src/app/services/prevoznik.service.ts","webpack:///./src/app/services/putanja.service.ts","webpack:///./src/app/services/rezervacije.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/users/get-rezervacije/get-rezervacije.component.css","webpack:///./src/app/users/get-rezervacije/get-rezervacije.component.html","webpack:///./src/app/users/get-rezervacije/get-rezervacije.component.ts","webpack:///./src/app/users/login/login.component.css","webpack:///./src/app/users/login/login.component.html","webpack:///./src/app/users/login/login.component.ts","webpack:///./src/app/users/register/register.component.css","webpack:///./src/app/users/register/register.component.html","webpack:///./src/app/users/register/register.component.ts","webpack:///./src/app/users/users-routing.module.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container{\\r\\n    max-width: 400px;\\r\\n  width: 100%;\\r\\n  height: auto;\\r\\n  margin-top:-50px;\\r\\n  position: relative;\\r\\n}\\r\\nh2{\\r\\n    margin-bottom:20px;\\r\\n}\\r\\n#contact {\\r\\n    background: rgb(178, 240, 165);\\r\\n    padding: 25px;\\r\\n    margin: 150px 0;\\r\\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\\r\\n  }\\r\\n.btn{\\r\\n    background-color:rgb(45, 97, 34);\\r\\n    margin-top:60px;\\r\\n    margin-bottom:40px;\\r\\n}\\r\\n#contact input[type=\\\"text\\\"],\\r\\n#contact input[type=\\\"tel\\\"] {\\r\\n  width: 100%;\\r\\n  border: 1px solid rgb(45, 97, 34);\\r\\n  background: rgb(255, 255, 255);\\r\\n  margin: 0 0 5px;\\r\\n  padding: 10px;\\r\\n}\\r\\n#contact input[type=\\\"text\\\"]:hover,\\r\\n#contact input[type=\\\"tel\\\"]:hover{\\r\\n  transition: border-color 0.3s ease-in-out;\\r\\n  border: 1px solid rgb(21, 46, 19);\\r\\n}\\r\\n.labela{\\r\\n    letter-spacing:1px; \\r\\n    text-align:center;\\r\\n    color: rgb(17, 14, 14);\\r\\n}\"","module.exports = \"<div class=\\\"needs-validation col-md-4 col-md-offset-2 content container\\\">\\n    <form [formGroup]=\\\"form\\\" id=\\\"contact\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2 class=\\\"text-center\\\" >Dodaj prevoznika</h2>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"imeprevoznika\\\" class=\\\"labela\\\">Ime prevoznika</label>\\n            <input type=\\\"text\\\" id=\\\"imeprevoznika\\\" class=\\\"form-control\\\" formControlName=\\\"imeprevoznika\\\" autocomplete=\\\"imeprevoznika\\\">\\n            <div *ngIf=\\\"form.controls['imeprevoznika'].errors && !form.controls['imeprevoznika'].pristine\\\" class=\\\"error-msg\\\">\\n                <div [hidden]=\\\"!form.controls['imeprevoznika'].errors.required\\\">\\n                    Valid name is required.\\n                </div>\\n                <div [hidden]=\\\"!form.controls['imeprevoznika'].errors.minlength\\\">\\n                    Name is too short\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"kontakt\\\" class=\\\"labela\\\">Kontakt</label>\\n            <input type=\\\"tel\\\" id=\\\"kontakt\\\" class=\\\"form-control\\\" placeholder=\\\"+381655555555\\\" formControlName=\\\"kontakt\\\" autocomplete=\\\"kontakt\\\">\\n            <div *ngIf=\\\"form.controls['kontakt'].errors && !form.controls['kontakt'].pristine\\\" class=\\\"error-msg\\\">\\n                <div [hidden]=\\\"!form.controls['kontakt'].errors.required\\\">\\n                    Valid phone number is required.\\n                </div>\\n                <div [hidden]=\\\"!form.controls['kontakt'].errors.minlength\\\">\\n                    You must enter valid phone number.\\n                </div>\\n            </div>\\n        </div>\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\"  [disabled]=\\\"!form.valid\\\" >Dodaj</button>\\n    </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Prevoznik} from '../../model/prevoznik.model';\nimport { Router } from '@angular/router';\nimport {PrevoznikService} from '../../services/prevoznik.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-prevoznik',\n  templateUrl: './add-prevoznik.component.html',\n  styleUrls: ['./add-prevoznik.component.css']\n})\nexport class AddPrevoznikComponent implements OnInit {\n\n  form: FormGroup;\n  constructor(private router:Router, private prevoznikServ:PrevoznikService,private toastr:ToastrService) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      imeprevoznika: new FormControl(null, [Validators.required,Validators.minLength(1)]),\n      kontakt: new FormControl(null, [Validators.required,Validators.minLength(5)]),\n\n    })\n  }\n  onSubmit(){\n    const prevoznik=new Prevoznik(\n      this.form.value.imeprevoznika,\n      this.form.value.kontakt\n    );\n    this.prevoznikServ.addPrevoznici(prevoznik).subscribe(data=>{\n\n      if(data.success==false)\n      {\n        this.toastr.error(data.msg, '',{\n          closeButton:true,\n          positionClass:'toast-bottom-left'\n        });\n        this.form.reset();\n      }else{\n      this.form.reset();\n      this.toastr.success(data.msg, '',{\n        closeButton:true,\n        positionClass:'toast-bottom-left'\n     });\n    this.router.navigate(['/prevoznici/get']);\n    }\n    });\n  }\n\n}\n","module.exports = \".image{\\r\\n    margin-top: 105px;\\r\\n    margin-left: 700px;\\r\\n}\\r\\n.klasa{\\r\\n    position: absolute;\\r\\n\\ttop:10%;\\r\\n    left: 50%;\\r\\n    margin-left:190px;\\r\\n    margin-top: 60px;\\r\\n\\twidth:300px;\\r\\n    height:100px;\\r\\n}\\r\\nh2{\\r\\n    color: rgb(53, 46, 46);letter-spacing:1px; text-align:center; margin-bottom:25px;\\r\\n}\\r\\n#contact input[type=\\\"text\\\"],\\r\\n#contact input[type=\\\"time\\\"] {\\r\\n  width: 100%;\\r\\n  border: 1px double rgb(32, 127, 216);\\r\\n  margin: 0 0 5px;\\r\\n  padding: 10px;\\r\\n}\\r\\n#contact input[type=\\\"text\\\"]:hover,\\r\\n#contact input[type=\\\"tel\\\"]:hover{\\r\\n  transition: border-color 0.3s ease-in-out;\\r\\n  border: 1px solid rgb(47, 27, 160);\\r\\n}\\r\\n.btn{\\r\\n    position:relative;\\r\\n    width:50%;\\r\\n    left:25%;\\r\\n    margin-top:40px;\\r\\n    background-color:purple;\\r\\n    color:white;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"needs-validation col-md-4 col-md-offset-2 content\\\">\\n        <img src=\\\"../assets/slike/directions1.png\\\" alt=\\\"\\\" width=\\\"250\\\" height=\\\"180\\\" class=\\\"image\\\">\\n        <div class=\\\"klasa\\\">\\n  <form [formGroup]=\\\"form\\\" id=\\\"contact\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <h2>Dodaj rutu</h2>\\n      <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" id=\\\"ruta\\\" class=\\\"form-control\\\" placeholder=\\\"Grad1,Grad2\\\" formControlName=\\\"ruta\\\" autocomplete=\\\"ruta\\\">\\n            <div *ngIf=\\\"form.controls['ruta'].errors && !form.controls['ruta'].pristine\\\" class=\\\"error-msg\\\">\\n                <div [hidden]=\\\"!form.controls['ruta'].errors.required\\\">\\n                    Unesite validnu rutu.\\n                </div>\\n                <div [hidden]=\\\"!form.controls['ruta'].errors.minlength\\\">\\n                  Unesite validnu rutu..\\n                </div>\\n            </div>\\n        </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"vremePolaska\\\">Vreme polaska</label>\\n          <input type=\\\"time\\\" id=\\\"vremePolaska\\\" class=\\\"form-control\\\" formControlName=\\\"vremePolaska\\\" autocomplete=\\\"vremePolaska\\\">\\n          <div *ngIf=\\\"form.controls['vremePolaska'].errors && !form.controls['vremePolaska'].pristine\\\" class=\\\"error-msg\\\">\\n              <div [hidden]=\\\"!form.controls['vremePolaska'].errors.required\\\">\\n                  Unesite validno vreme polaska.\\n              </div>\\n              <div [hidden]=\\\"!form.controls['vremePolaska'].errors.minlength\\\">\\n                Unesite validno vreme polaska.\\n              </div>\\n          </div>\\n      </div>\\n          <!--<label for=\\\"uZemlji\\\">U zemlji: </label>\\n          <input type=\\\"checkbox\\\" id=\\\"uZemlji\\\" class=\\\"form-control\\\" placeholder=\\\"Grad1,Grad2\\\" formControlName=\\\"uZemlji\\\">\\n          -->\\n\\n      <button class=\\\"btn btn-md btn-block\\\" type=\\\"submit\\\"  [disabled]=\\\"!form.valid\\\" >Dodaj</button>\\n  </form>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Ruta} from '../../model/ruta.model';\nimport { Router, ActivatedRoute,ParamMap } from '@angular/router';\nimport {PutanjaService} from '../../services/putanja.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-putanja',\n  templateUrl: './add-putanja.component.html',\n  styleUrls: ['./add-putanja.component.css']\n})\nexport class AddPutanjaComponent implements OnInit {\n\n  form: FormGroup;\n  public taken;\n  constructor(private router:Router, private putanjaServ:PutanjaService,private toastr:ToastrService,private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      vremePolaska: new FormControl(null, [Validators.required]),\n      ruta: new FormControl(null, [Validators.required,Validators.minLength(3)]),\n      //uZemlji:new FormControl(null,[Validators.required])\n\n    })\n  }\n  onSubmit(){\n    const putanja=new Ruta(\n      this.form.get('ruta').value.split(','),\n      this.form.get('vremePolaska').value,\n      //this.form.get('uZemlji').value,\n\n    );\n    //console.log(putanja);\n    this.route.paramMap.subscribe((params:ParamMap) => {\n      this.taken = params.get('id');\n      var obj:any={};\n      obj.prevoznik=this.taken;\n      obj.putanja=putanja;\n        this.putanjaServ.addPutanja(obj).subscribe(data=>{\n\n          if(data.success==false) {\n            this.toastr.error(data.msg, '',{\n            closeButton:true,\n            positionClass:'toast-bottom-left'\n          });\n          this.form.reset();\n          } else{\n           this.form.reset();\n           this.toastr.success(data.msg, '',{\n           closeButton:true,\n           positionClass:'toast-bottom-left'\n          });\n          this.router.navigate(['/prevoznici/get']);\n          }\n    });\n\n        \n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AddPrevoznikComponent} from './add-prevoznik/add-prevoznik.component';\nimport {AddPutanjaComponent} from './add-putanja/add-putanja.component';\nimport {GetallrezervacijeComponent} from './getallrezervacije/getallrezervacije.component';\n\nconst routes: Routes = [\n  {path:'addPrevoznik',component:AddPrevoznikComponent},\n  {path:'addputanja/:id',component:AddPutanjaComponent},\n  {path:'getallrezervacije',component:GetallrezervacijeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AddPrevoznikComponent } from './add-prevoznik/add-prevoznik.component';\nimport { AddPutanjaComponent } from './add-putanja/add-putanja.component';\nimport { GetallrezervacijeComponent } from './getallrezervacije/getallrezervacije.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  declarations: [AddPrevoznikComponent, AddPutanjaComponent, GetallrezervacijeComponent]\n})\nexport class AdminModule { }\n","module.exports = \".tabela{\\r\\n    overflow: hidden;\\r\\n\\t  width: 80%;\\r\\n\\t  margin: 0 auto;\\r\\n  display: table;\\r\\n  padding: 0 0 8em 0;\\r\\n  border: 1px solid rgb(94, 67, 67);\\r\\n  margin-bottom:20px;\\r\\n}\\r\\n.tabela th {\\r\\n    background-color: rgb(218, 185, 164);\\r\\n}\\r\\n.tabela td{\\r\\n    color: rgb(53, 46, 46); text-align:center;\\r\\n}\\r\\n.tabela th, td {\\r\\n    border: 1px solid rgb(100, 33, 33);\\r\\n }\\r\\nh2{\\r\\n    font-weight: 700;\\r\\n    text-align: center;\\r\\n    display: block;\\r\\n    line-height:1em;\\r\\n    padding-bottom: 2px;\\r\\n    padding-top:30px;\\r\\n    color: rgb(70, 61, 63);\\r\\n  }\"","module.exports = \"<h2>Sve rezervacije</h2>\\n<table class=\\\"table table-bordered table-hover tabela\\\" style=\\\"margin-top:30px;\\\">\\n  <thead class=\\\"thead-light\\\">\\n    <tr>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">#</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Ruta</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Prevoznik</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Datum polaska</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let rezervacija of rezervacije; index as i;\\\">\\n      <th class=\\\"text-center\\\" scope=\\\"row\\\">{{i+1}}</th>\\n      <td class=\\\"text-center\\\" >{{rezervacija.destinacija}}</td>\\n      <td class=\\\"text-center\\\">{{rezervacija.prevoznik}}</td>\\n      <td class=\\\"text-center\\\">{{rezervacija.datumPolaska}}</td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport {Ruta} from '../../model/ruta.model';\nimport { Router } from '@angular/router';\nimport {RezervacijeService} from '../../services/rezervacije.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {Rezervacija} from '../../model/rezervacija.model';\n\n\n@Component({\n  selector: 'app-getallrezervacije',\n  templateUrl: './getallrezervacije.component.html',\n  styleUrls: ['./getallrezervacije.component.css']\n})\nexport class GetallrezervacijeComponent implements OnInit {\n  public rezervacije:Rezervacija[];\n\n  constructor(private router:Router, private rezervacijaServ:RezervacijeService) { }\n\n  ngOnInit() {\n    this.rezervacijaServ.getAllRezervacije().subscribe(data=>{\n      this.rezervacije=data;\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UsersModule} from './users/users.module';\nimport {PagesModule} from './pages/pages.module';\nimport {PrevozniciModule} from './prevoznici/prevoznici.module';\nimport {AdminModule} from './admin/admin.module';\n\n\nconst routes: Routes = [\n        {path: '', loadChildren: () => PagesModule } ,\n        { path: 'users', loadChildren: () => UsersModule  },\n        {path:'prevoznici',loadChildren:()=>PrevozniciModule},\n        {path:'admin',loadChildren:()=>AdminModule}\n        \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n<app-error></app-error>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularFile';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n \nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MyDatePickerModule } from 'mydatepicker';\n \nimport { NavbarComponent } from './pages/navbar/navbar.component';\nimport { ErrorComponent } from './pages/error/error.component'\n\n//uvodimo servise\nimport {UserService} from './services/user.service';\nimport { ErrorService } from './services/error.service';\nimport {PrevoznikService} from './services/prevoznik.service';\nimport {PutanjaService} from './services/putanja.service';\nimport {RezervacijeService} from './services/rezervacije.service';\n\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ErrorComponent\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot() ,\n    MyDatePickerModule\n  ],\n  providers: [UserService,ErrorService,PrevoznikService,PutanjaService,RezervacijeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","export class Error {\r\n    constructor(public title: string, public message: string) {}\r\n}","export class Prevoznik{\r\n    constructor(\r\n        public imePrevoznika: String,\r\n        public kontakt: String,\r\n        public rute?: [String], //ne znam dal ovde treba upitnik ili ne\r\n        public id?: Number\r\n\r\n\r\n    ){}\r\n}","export class Ruta{\r\n    constructor(\r\n        public ruta: [String],\r\n        public vremePolaska: String,\r\n        public uZemlji?: Boolean,\r\n        public imePrevoznika?:String,\r\n        public id?:String\r\n    ){}\r\n}","export class User{\r\n    constructor(\r\n        public email: String,\r\n        public password: String,\r\n        public name?: String,\r\n        public username?: String,\r\n        public admin?:number\r\n    ){}\r\n}","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n//servisi\nimport { ErrorService } from '../../services/error.service';\nimport { ToastrService } from 'ngx-toastr';\n//modeli\nimport { Error } from '../../model/error.model';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor(private router: Router,private errorService: ErrorService,private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.errorService.errorOccurred\n    .subscribe(\n        (error: Error) => {\n          /************Rukovanje pristiglim greskama************/\n          let msg=error.message;\n          let status=parseInt(error.title);\n          if(status==0)msg=\"Failed to connect to server\";\n          if(status==401) {this.router.navigate(['/users/login']);\n          msg=\"Please login first!\";\n        }\n          if(status==403||status==500) this.router.navigate(['/']);\n          \n          this.toastr.error(msg,\"Error\",{\n            closeButton:true,\n            positionClass:'toast-bottom-left'\n          });\n        }\n    );\n  }\n\n}\n","module.exports = \".active-cyan-3 input[type=text] {\\r\\n    border: 1px solid #d88b26;\\r\\n    box-shadow: 0 0 0 1px #d88b26;\\r\\n    display:block;\\r\\n}\\r\\n.moja{\\r\\n    width:200px;\\r\\n    border-radius: 5px;\\r\\n    margin-left:60px;\\r\\n}\\r\\n.myDIV {\\r\\n    text-align:center;\\r\\n    position:relative;\\r\\n    margin: 0 auto 5px;\\r\\n}\\r\\n.mojaforma{\\r\\n    position:absolute;\\r\\n    border: 1px solid #4dd0e1;\\r\\n    box-shadow: 0 0 0 1px #4dd0e1;\\r\\n}\\r\\n.tabela{\\r\\n    overflow: hidden;\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n    display: table;\\r\\n    padding: 0 0 8em 0;\\r\\n    margin-bottom:20px;\\r\\n}\\r\\n.tabela th {\\r\\n    background-color:#575048;\\r\\n    color: #e5e9c4; text-align:center;\\r\\n}\\r\\ntr:nth-child(odd){\\r\\n    background:#EBEBEB\\r\\n}\\r\\ntr:nth-child(even){\\r\\n    background:#e5e9c4\\r\\n}\\r\\nh1{\\r\\n    margin-top:-70px;\\r\\n\\r\\n}\\r\\n.product-device{\\r\\n    margin-left:550px;\\r\\n    margin-top:-30px;\\r\\n}\\r\\ntabela,th,td{\\r\\n    border:1px solid #292622;\\r\\n}\\r\\n.btn{\\r\\n    background-color:#d88b26;\\r\\n    color:#e5e9c4;\\r\\n    text-align: center;\\r\\n    border: 1px solid #d88b26;\\r\\n    font-weight: 500;\\r\\n}\\r\\ncaption{\\r\\n    color:#575048;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron position-relative overflow-hidden p-2 p-md-5 text-center\\\" style=\\\"background-color:#e5e9c4\\\">\\n    <img class=\\\"product-device box-shadow d-md-block\\\" src=\\\"../../../assets/slike/novisad.png\\\">\\n    <div>\\n      <h1 class=\\\"display-4 font-weight-normal klasa\\\">Autobuska stanica Novi Sad</h1>      \\n      <p class=\\\"lead font-weight-normal klasa\\\">Dobrodošli na zvanični sajt Autobuske stanice Novi Sad</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"active-cyan-3 myDIV col-md-3\\\">\\n    <form #myForm=\\\"ngForm\\\" novalidate>\\n        <my-date-picker name=\\\"mydate\\\" [options]=\\\"myDatePickerOptions\\\"\\n                        [(ngModel)]=\\\"model\\\" required></my-date-picker>\\n    </form>\\n  <input class=\\\"form-control moja\\\" type=\\\"text\\\" (change)=\\\"goSearch($event)\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n</div>\\n<table class=\\\"table table-bordered tabela\\\" *ngIf=\\\"found\\\" style=\\\"margin-top:30px;\\\">\\n    <caption><i>*Za rezervaciju karata morate biti prijavljeni</i></caption>\\n  <thead class=\\\"thead-light\\\">\\n    <tr>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">#</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Prevoznik</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Vreme polaska</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Ruta</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\" *ngIf=\\\"!isAdmin && isLoggedIn()\\\"></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let ruta of rute; index as i;\\\">\\n      <th class=\\\"text-center\\\" scope=\\\"row\\\">{{i+1}}</th>\\n      <td class=\\\"text-center\\\">{{ruta.imePrevoznika}}</td>\\n      <td class=\\\"text-center\\\">{{ruta.vremePolaska}}</td>\\n      <td class=\\\"text-center\\\">{{ruta.ruta}}</td>\\n      <td class=\\\"text-center\\\" *ngIf=\\\"!isAdmin && isLoggedIn()\\\" (click)=\\\"rezervisi(ruta)\\\"><button type=\\\"button\\\" class=\\\"btn\\\">Rezervisi</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Ruta} from '../../model/ruta.model';\nimport {PutanjaService} from '../../services/putanja.service';\nimport { Router } from '@angular/router';\nimport {RezervacijeService} from '../../services/rezervacije.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormControl, Validators,FormBuilder } from '@angular/forms';\nimport {IMyDpOptions} from 'mydatepicker';\nimport {Rezervacija} from '../../model/rezervacija.model';\nimport {UserService} from '../../services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public myDatePickerOptions: IMyDpOptions = {\n    // other options...\n    dateFormat: 'dd.mm.yyyy',\n    inline: false,\n    width: '80%'\n};\n  public model: any = { date: { year: 2018, month: 9, day: 8 } };\n\n\n  rute:Ruta[];\n  public isAdmin:Boolean;\n  public found:Boolean; \n\n\n  constructor(private putanjaServ:PutanjaService,private router:Router,private rezervacijaServ:RezervacijeService,private toastr:ToastrService,private userService:UserService) { }\n  goSearch(data){\n    if(this.rute!=undefined){\n      this.rute.length=0;\n    }\n    /*if(data.obj.length>0)\n      this.found=true;\n    else{\n      this.found=false;\n    }*/\n\n      this.putanjaServ.getAllRoutes(data.target.value.toString()).subscribe(data => {\n        //upisujemo ih u niz\n        if(data.obj!=undefined){\n          if(data.obj.length>0)\n            this.found=true;\n          else{\n            this.found=false;\n          }\n        }\n        this.rute=data.obj;\n        //this.found=true;\n        //sortiramo\n        this.sortList();\n      });\n  }\n\n  ngOnInit() {\n    localStorage.getItem('admin')==\"1\"?(this.isAdmin=true):(this.isAdmin=false);\n  }\n\n  sortList(){\n    for(let i=0;i<this.rute.length;i++){\n      for(let j=i+1;j<this.rute.length;j++){\n        const vreme1= this.rute[i].vremePolaska.split(':')\n        const sati1=parseInt(vreme1[0]);\n        const minuti1=parseInt(vreme1[1]) + sati1*60;\n\n        const vreme2= this.rute[j].vremePolaska.split(':')\n        const sati2=parseInt(vreme2[0]);\n        const minuti2=parseInt(vreme2[1])+sati2*60;\n\n        if(minuti1>minuti2){\n          const m=this.rute[i];\n          this.rute[i]=this.rute[j];\n          this.rute[j]=m;\n        }\n\n      }\n    }\n  }\n\n  rezervisi(ruta){\n    var vreme=ruta.vremePolaska.split(':');\n    //proveri vreme, mozda treba da dodas i gore i dole +1\n    var sati=parseInt(vreme[0]);\n    var minuta=parseInt(vreme[1]);\n    console.log(vreme);\n    const rezervacija:any={\n      prevoznik:ruta.imePrevoznika,\n      destinacija:ruta.ruta,\n\n      datumPolaska:new Date(this.model.date.year,this.model.date.month-1,this.model.date.day).setHours(sati+2,minuta)\n      \n    };\n\n    this.rezervacijaServ.addRezervacija(rezervacija).subscribe(data=>{\n      if(data.success==false) {\n        this.toastr.error(data.msg, '',{\n        closeButton:true,\n        positionClass:'toast-bottom-left'\n      });\n    }\n    else{\n      this.toastr.success(\"Reservation successful\", '',{\n        closeButton:true,\n        positionClass:'toast-bottom-left'\n       });\n       this.router.navigate(['/users/getrezervacije']);\n    }\n    });\n  }\n  //provera da li je korisnik ulogovan\n  isLoggedIn() {\n    //ako je prijavljen vrati true..ako ne, false(i to se na kraju u htmlu namesta)\n     if(this.userService.isLoggedIn())\n     {\n      return true;\n     }else return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark \\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MAS</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n   \\n    <div class=\\\"collapse navbar-collapse\\\"  [ngbCollapse]=\\\"isCollapsed\\\" id=\\\"navbarsExampleDefault\\\">\\n\\n      <ul class=\\\"navbar-nav navbar-left mr-auto\\\">\\n        <li class=\\\"nav-item\\\" role=\\\"presentation\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/prevoznici/get']\\\">Prevoznici</a>\\n        </li>\\n      </ul>\\n      \\n      <ul class=\\\"navbar-nav navbar-right ml-auto\\\">\\n          <div *ngIf=\\\"!isLoggedIn();then outProfiled else inProfiled\\\"></div> \\n          <ng-template #outProfiled>\\n        <li class=\\\"nav-item\\\" role=\\\"presentation\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/users/login']\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" role=\\\"presentation\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/users/register']\\\">Register</a>\\n        </li>\\n      </ng-template>\\n      <ng-template #inProfiled>\\n        <a class=\\\"nav-link\\\"[routerLink]=\\\"['/users/getrezervacije']\\\" style=\\\"color:white(255, 153, 0);\\\" *ngIf=\\\"!isAdmin()\\\" (click)=\\\"getRez()\\\">Pogledaj rezervacije</a>\\n        <a class=\\\"nav-link\\\"[routerLink]=\\\"['/admin/getallrezervacije']\\\" style=\\\"color:white(255, 153, 0);\\\" *ngIf=\\\"isAdmin()\\\" (click)=\\\"getAllRez()\\\">Sve rezervacije</a>\\n        <a class=\\\"nav-link\\\"[routerLink]=\\\"['/users/login']\\\" style=\\\"color:white(255, 153, 0);\\\" (click)=\\\"logOut()\\\">Log out</a>\\n        \\n      </ng-template>\\n      </ul>\\n      \\n    </div>\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../model/user.model';\n \n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  public isCollapsed = false;\n  message:number;\n  public wait :false;\n  //ovde fali admin 0\n  public users={name:'',username:'',email:''};\n  \n  //public isAdmin:Boolean;\n \n  constructor(private router:Router, private userService:UserService) { }\n \n  ngOnInit() {\n   // localStorage.getItem('admin')==\"1\"?(this.isAdmin=true):(this.isAdmin=false);\n  }\n  isLoggedIn() {\n    //ako je prijavljen vrati true..ako ne, false(i to se na kraju u htmlu namesta)\n     if(this.userService.isLoggedIn())\n     {\n      return true;\n     }else return false;\n  }\n  clearDataOfUser()\n  {\n    this.users.name='';\n    this.users.username='';\n    this.users.email='';\n    //this.url=this.userSer.getAvatarURL('');\n  }\n  logOut(){\n    this.userService.logout();\n    //saljemo ga na rutu za prijavljivanje\n    this.router.navigate(['/users/login']);\n    this.wait=false;\n    this.clearDataOfUser();\n  }\n  getAllRez(){\n    this.router.navigate(['/admin/getallrezervacije']);\n  }\n  isAdmin(){\n    return localStorage.getItem('admin')==\"1\";\n  }\n  getRez(){\n    this.router.navigate(['/users/getrezervacije']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\n\nconst routes: Routes = [\n      {path: '', component:HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MyDatePickerModule } from 'mydatepicker';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\n//import { ErrorComponent } from './error/error.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PagesRoutingModule,\n    MyDatePickerModule,\n    FormsModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class PagesModule { }\n","module.exports = \".tabela{\\r\\n    overflow: hidden;\\r\\n\\t  width: 80%;\\r\\n\\t  margin: 0 auto;\\r\\n  display: table;\\r\\n  padding: 0 0 8em 0;\\r\\n  border: 1px solid rgb(94, 67, 67)\\r\\n}\\r\\n.tabela th {\\r\\n    background-color: rgb(218, 185, 164);\\r\\n}\\r\\n.tabela td{\\r\\n    color: rgb(53, 46, 46); text-shadow: 0 0 5px rgba(0,0,0,0.3); text-align:center;\\r\\n}\\r\\nh2{\\r\\n  font-weight: 700;\\r\\n  text-align: center;\\r\\n  display: block;\\r\\n  line-height:1em;\\r\\n  padding-bottom: 2px;\\r\\n  padding-top:30px;\\r\\n  color: rgb(122, 108, 110);\\r\\n}\\r\\n.tabela th, td {\\r\\n   border: 1px solid rgb(100, 33, 33);\\r\\n}\\r\\n.abtn{\\r\\n    background-color:rgb(218, 185, 164);\\r\\n    color: rgb(53, 46, 46);\\r\\n    text-align: center;\\r\\n    display: block;\\r\\n    margin-left:600px;\\r\\n    margin-top:50px;\\r\\n    border: 1px solid rgb(53, 46, 46);\\r\\n    font-weight: 600;\\r\\n}\"","module.exports = \"<h2>Lista prevoznika </h2>\\n<table class=\\\"table table-bordered table-hover tabela\\\" style=\\\"margin-top:30px;\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th class=\\\"text-center a\\\" scope=\\\"col\\\">#</th>\\n        <th class=\\\"text-center a\\\" scope=\\\"col\\\">Ime prevoznika</th>\\n        <th class=\\\"text-center a\\\" scope=\\\"col\\\">Kontakt</th>\\n        <th class=\\\"text-center a\\\" scope=\\\"col\\\" *ngIf=\\\"isAdmin\\\"></th>\\n        \\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let prevoznik of prevoznici; index as i;\\\">\\n        <th class=\\\"text-center\\\" scope=\\\"row\\\">{{i+1}}</th>\\n        <td class=\\\"text-center\\\" (click)=\\\"navigateTo(prevoznik)\\\">{{prevoznik.imePrevoznika}}</td>\\n        <td class=\\\"text-center\\\">{{prevoznik.kontakt}}</td>\\n        <td *ngIf=\\\"isAdmin\\\" class=\\\"text-center\\\"> <button type=\\\"button\\\" (click)=\\\"deletePrev(prevoznik)\\\" class=\\\"btn btn-danger\\\">delete</button>\\n        \\n      </tr>\\n    </tbody>\\n    \\n  </table>\\n\\n  <div>\\n      <button type=\\\"button\\\" *ngIf=\\\"isAdmin\\\" (click)=\\\"addPrevoznik()\\\" class=\\\"btn abtn\\\">Dodaj prevoznika</button>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Prevoznik} from '../../model/prevoznik.model';\nimport { Router } from '@angular/router';\nimport {PrevoznikService} from '../../services/prevoznik.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-get',\n  templateUrl: './get.component.html',\n  styleUrls: ['./get.component.css']\n})\nexport class GetComponent implements OnInit {\n\n  public isAdmin:Boolean;\n  public prevoznici:Prevoznik[];\n  constructor(private router:Router, private prevoznikServ:PrevoznikService,private toastr: ToastrService) { }\n\n  ngOnInit() {\n    localStorage.getItem('admin')==\"1\"?(this.isAdmin=true):(this.isAdmin=false);\n    this.prevoznikServ.getPrevoznici().subscribe(data=>{\n      this.prevoznici=data.obj;\n    });\n  }\n  deletePrev(prevoznik){\n    //brisanje sa sarvera\n    this.prevoznikServ.deletePrev(prevoznik).subscribe();\n    //brisanje iz niza za prikaz\n    var index = this.prevoznici.indexOf(prevoznik);\n    if (index > -1) {\n      this.prevoznici.splice(index, 1);\n    }\n    this.toastr.success('Prevoznik je uspešno obrisan!','',{\n      closeButton:true,\n      positionClass:'toast-bottom-left'\n    });\n  }\n\n  navigateTo(prevoznik){\n    this.router.navigate(['/prevoznici/getputanja/'+prevoznik._id]);\n  }\n  addPrevoznik(){\n    this.router.navigate(['/admin/addPrevoznik']);\n  }\n\n}\n","module.exports = \".table-fill {\\r\\n    margin-top:60px;\\r\\n    background: white;\\r\\n    border-radius:3px;\\r\\n    border-collapse: collapse;\\r\\n    height:auto;\\r\\n    margin: auto;\\r\\n    max-width: 600px;\\r\\n    padding:5px;\\r\\n    width: 100%;\\r\\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\ntr:hover td {\\r\\n    background:#4E5066;\\r\\n    color:#FFFFFF;\\r\\n    border-top: 1px solid #4a5569;\\r\\n  }\\r\\ntr:nth-child(even) td{\\r\\n    background-color: rgb(218, 185, 164);\\r\\n  }\\r\\ntr:nth-child(odd):hover td {\\r\\n    background:#4E5066;\\r\\n  }\\r\\ntr:nth-child(even):hover td {\\r\\n    background:#4E5066;\\r\\n  }\\r\\nth{\\r\\n    background-color: rgb(218, 185, 164);\\r\\n    color:white;\\r\\n}\\r\\nth.a{\\r\\n    color:white;\\r\\n    background-color: rgb(218, 185, 164);\\r\\n}\\r\\n.btnDodaj{\\r\\n    background-color:rgb(218, 185, 164);\\r\\n    color: rgb(53, 46, 46);\\r\\n    text-align: center;\\r\\n    margin-left:400px;\\r\\n    margin-top:50px;\\r\\n    border: 1px solid rgb(53, 46, 46);\\r\\n    font-weight: 600;\\r\\n}\"","module.exports = \"<table class=\\\"table table-bordered table-fill\\\" style=\\\"margin-top:30px;\\\">\\n  <thead class=\\\"thead-light\\\">\\n    <tr>\\n      <th class=\\\"text-center a\\\" scope=\\\"col\\\">#</th>\\n      <th class=\\\"text-center a\\\" scope=\\\"col\\\">Vreme polaska</th>\\n      <th class=\\\"text-center a\\\" scope=\\\"col\\\">Ruta</th>\\n      <th class=\\\"text-center a\\\" scope=\\\"col\\\" *ngIf=\\\"isAdmin\\\"></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let putanja of putanje; index as i;\\\">\\n      <th class=\\\"text-center\\\" scope=\\\"row\\\">{{i+1}}</th>\\n      <td class=\\\"text-center\\\">{{putanja.vremePolaska}}</td>\\n      <td class=\\\"text-center\\\">{{putanja.ruta}}</td>\\n      <td *ngIf=\\\"isAdmin\\\" class=\\\"text-center\\\"> <button type=\\\"button\\\" (click)=\\\"deletePutanja(putanja)\\\" class=\\\"btn btn-danger\\\">delete</button>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n    <div>\\n    <button type=\\\"button\\\" *ngIf=\\\"isAdmin\\\" (click)=\\\"addPutanja()\\\" class=\\\"btn btnDodaj\\\">Dodaj putanju</button>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute,ParamMap } from '@angular/router';\nimport {PutanjaService} from '../../services/putanja.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {Ruta} from '../../model/ruta.model';\nimport {RezervacijeService} from '../../services/rezervacije.service';\n\n\n@Component({\n  selector: 'app-getputanja',\n  templateUrl: './getputanja.component.html',\n  styleUrls: ['./getputanja.component.css']\n})\nexport class GetputanjaComponent implements OnInit {\n\n  public putanje:Ruta[];\n  public taken; //parametar putanje\n\n  public isAdmin:Boolean;\n  constructor(private router:Router, private putanjaServ:PutanjaService,private route: ActivatedRoute,private rezervacijaServ:RezervacijeService,private toastr:ToastrService) { }\n\n  ngOnInit() {\n\n    localStorage.getItem('admin')==\"1\"?(this.isAdmin=true):(this.isAdmin=false);\n    this.route.paramMap.subscribe((params:ParamMap) => {\n      this.taken = params.get('id');\n        this.putanjaServ.getPutanja(this.taken).subscribe(data=>{\n        this.putanje=data.obj;\n        for(let i=0;i<this.putanje.length;i++){\n          for(let j=i+1;j<this.putanje.length;j++){\n            const vreme1= this.putanje[i].vremePolaska.split(':')\n            const sati1=parseInt(vreme1[0]);\n            const minuti1=parseInt(vreme1[1]) + sati1*60;\n\n            const vreme2= this.putanje[j].vremePolaska.split(':')\n            const sati2=parseInt(vreme2[0]);\n            const minuti2=parseInt(vreme2[1])+sati2*60;\n\n            if(minuti1>minuti2){\n              const m=this.putanje[i];\n              this.putanje[i]=this.putanje[j];\n              this.putanje[j]=m;\n            }\n\n          }\n        }\n        \n        \n    })\n  })\n  }\n\n  deletePutanja(putanja){\n    //brisanje sa sarvera\n    this.putanjaServ.deletePutanja(putanja).subscribe();\n    //brisanje iz niza za prikaz\n    var index = this.putanje.indexOf(putanja);\n    if (index > -1) {\n      this.putanje.splice(index, 1);\n    }\n    this.toastr.success('Putanja je uspešno obrisana!','',{\n      closeButton:true,\n      positionClass:'toast-bottom-left'\n    });\n  }\n\n  addPutanja(){\n    this.router.navigate(['/admin/addputanja/'+this.taken]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {GetComponent} from './get/get.component';\nimport {GetputanjaComponent} from './getputanja/getputanja.component';\n\nconst routes: Routes = [\n  {path:'get',component:GetComponent},\n  {path:'getputanja/:id',component:GetputanjaComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PrevozniciRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PrevozniciRoutingModule } from './prevoznici-routing.module';\nimport { GetComponent } from './get/get.component';\nimport { GetputanjaComponent } from './getputanja/getputanja.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrevozniciRoutingModule\n  ],\n  declarations: [GetComponent, GetputanjaComponent]\n})\nexport class PrevozniciModule { }\n","import {EventEmitter, Injectable } from '@angular/core';\nimport {Error} from '../model/error.model'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  errorOccurred = new EventEmitter<Error>();\n\n  handleError(error: any) {\n      const errorData = new Error(error.status,error._body);\n      this.errorOccurred.emit(errorData);\n  }\n  //constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport {Prevoznik} from '../model/prevoznik.model';\nimport { Http, Headers, Response } from '@angular/http';\nimport { map ,catchError} from 'rxjs/operators'; //radimo sa observables\nimport { throwError } from 'rxjs';\nimport { ErrorService } from '../services/error.service';\nimport { BehaviorSubject } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrevoznikService {\n  rootUrl: String = '/';\n  prevoznik: Prevoznik;\n  constructor(private http:Http, private errorService:ErrorService) { }\n\n  getPrevoznici(){\n    return this.http.get(this.rootUrl+'prevoznik/get').pipe(\n       map((response: Response) => {\n          return response.json();\n      }) ,catchError((error: Response) => {\n        this.errorService.handleError(error);\n        return throwError(error);\n    })\n);\n  }\n  addPrevoznici(prevoznik:Prevoznik){\n    const body = JSON.stringify(prevoznik); //ono sto je korisnik uneo u formi, prebacujemo u json da bismo te podatke mogli poslati\n    const headers = new Headers({'Content-Type': 'application/json','Authorization': localStorage.getItem('token') }); //u hederu navodimo da se radi o poruci koja sadrzi json\n    return this.http.post(this.rootUrl+'prevoznik/add', body, { headers: headers }).pipe(map((response: Response) => response.json()),catchError((error: Response) => {\n      this.errorService.handleError(error);\n      console.log(error);\n      return throwError(error);\n  })\n);\n}\n  deletePrev(prevoznik:Prevoznik){\n    var body=JSON.stringify(prevoznik);\n    const headers = new Headers({'Content-Type': 'application/json','Authorization': localStorage.getItem('token') });\n            return this.http.post(this.rootUrl+'prevoznik/delete',body,{headers:headers}).pipe(\n                map((response: Response) => {\n                    return response;\n                }) ,catchError((error: Response) => {\n                  this.errorService.handleError(error);\n                  return throwError(error);\n              })\n          );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Ruta} from '../model/ruta.model';\nimport { Http, Headers, Response } from '@angular/http';\nimport { map ,catchError} from 'rxjs/operators'; //radimo sa observables\nimport { throwError } from 'rxjs';\nimport { ErrorService } from '../services/error.service';\nimport { BehaviorSubject } from 'rxjs';\nimport {Prevoznik} from '../model/prevoznik.model';\nimport { identifierName } from '@angular/compiler';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PutanjaService {\n  rootUrl: String = '/';\n  ruta:Ruta;\n  prevoznik: Prevoznik;\n  constructor(private http:Http, private errorService:ErrorService) { }\n\n  //metoda za izlistavanje putanja \n  getPutanja(id: string){\n    return this.http.get(this.rootUrl+'prevoznik/getputanja/'+id).pipe(\n      map((response: Response)=>{\n        return response.json();\n      }) ,catchError((error: Response) => {\n        this.errorService.handleError(error);\n        return throwError(error);\n    })\n\n    )\n  }\n  //pronalazenje svih ruta\n  getAllRoutes(params) {\n    return this.http.get(this.rootUrl+'putanje/find/'+params).pipe(\n      map((response: Response) => {\n          return response.json();\n      }) ,catchError((error: Response) => {\n        this.errorService.handleError(error);\n        return throwError(error);\n    })\n);\n}\n\n\n  //metoda za dodavanje putanje\n  addPutanja(objekat:any){\n    var body=JSON.stringify(objekat);\n    //za sad samo ovo, posle ces dodavati za autorizaciju i tokene\n    const headers = new Headers({'Content-Type': 'application/json','Authorization': localStorage.getItem('token')});\n    return this.http.post(this.rootUrl+'prevoznik/addputanja/', body, { headers: headers }).pipe(\n      map(\n        (response: Response) => response.json()),\n        catchError((error: Response) => {\n      this.errorService.handleError(error);\n      console.log(error);\n      return throwError(error);\n  })\n);\n\n  }\n\n  deletePutanja(putanja:Ruta){\n    var body=JSON.stringify(putanja);\n    const headers = new Headers({'Content-Type': 'application/json','Authorization': localStorage.getItem('token') });\n            return this.http.post(this.rootUrl+'putanje/delete',body,{headers:headers}).pipe(\n                map((response: Response) => {\n                    return response;\n                }) ,catchError((error: Response) => {\n                  this.errorService.handleError(error);\n                  return throwError(error);\n              })\n          );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { map ,catchError} from 'rxjs/operators'; //radimo sa observables\nimport { throwError } from 'rxjs';\nimport { ErrorService } from '../services/error.service';\nimport {Rezervacija} from '../model/rezervacija.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RezervacijeService {\n\n  rootUrl: String = '/';\n  constructor(private http:Http,private errorService: ErrorService) { }\n\n  getRezervacije(){\n\n    const headers=new Headers({'Content-Type': 'application/json','Authorization': localStorage.getItem('token')});\n    return this.http.get(this.rootUrl+ 'rezervacije/findspecified' ,{headers:headers}).pipe(\n      map((response: Response) => {\n        return response.json();\n    }) ,catchError((error: Response) => {\n      this.errorService.handleError(error);\n      return throwError(error);\n  })\n  )\n  }\n  addRezervacija(rezervacija){\n    const body=JSON.stringify(rezervacija); //pretvara objekat u string\n\n    const headers=new Headers({'Content-Type': 'application/json','Authorization': localStorage.getItem('token')});\n    return this.http.post(this.rootUrl+ 'rezervacije/add',body, { headers: headers }).pipe(map((response: Response) => response.json()),catchError((error: Response) => {\n      this.errorService.handleError(error);\n      console.log(error);\n      return throwError(error);\n  })\n  );\n  }\n  getAllRezervacije(){\n\n    const headers=new Headers({'Content-Type': 'application/json','Authorization': localStorage.getItem('token')});\n    return this.http.get(this.rootUrl+ 'rezervacije/findAll',{headers:headers}).pipe(\n      map((response: Response) => {\n        return response.json();\n    }) ,catchError((error: Response) => {\n      this.errorService.handleError(error);\n      return throwError(error);\n  })\n  )\n  }\n}","import { Injectable } from '@angular/core';\nimport { User } from '../model/user.model';\nimport { Http, Headers, Response } from '@angular/http';\nimport { map ,catchError} from 'rxjs/operators'; //radimo sa observables\nimport { throwError } from 'rxjs';\nimport { ErrorService } from '../services/error.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  user: User;\n  rootUrl: String = '/'; \n  private messageSource = new BehaviorSubject(0);\n  currentMessage = this.messageSource.asObservable();\n  //injektujemo http modul u konstruktor\n  constructor(private http: Http, private errorService: ErrorService) {} \n\n\n  register(user: User) { //metoda za slanje zahteva za register, prosledjujemo korisnika kao parametar\n    const body = JSON.stringify(user); //ono sto je korisnik uneo u formi, prebacujemo u json da bismo te podatke mogli poslati\n    const headers = new Headers({'Content-Type': 'application/json'}); //u hederu navodimo da se radi o poruci koja sadrzi json\n    return this.http.post(this.rootUrl+'user/register', body, { headers: headers }).pipe(map((response: Response) => response.json()),catchError((error: Response) => {\n      this.errorService.handleError(error);\n      return throwError(error);\n  })\n  //saljemo post zahtev na rutu localhost:3000/users/register , taj zahtev ima promenljivi body i zaglavlje u kome pise da se radi\n  //o json objektu\n  //odgovor \"Response\" pretvaramo u json i on ce stici u komponentu login, dok u slucaju da je doslo do greske\n  //sifre se ne slazu, nalog ne postoji, onda ce te greske ici na errorService\n);\n}\nchangeMessage(user:number){\n  this.messageSource.next(user);\n}\n login(user:User){\n   const body=JSON.stringify(user);\n   const headers= new Headers({'Content-Type':'application/json'});\n   return this.http.post(this.rootUrl+'user/login',body,{headers:headers}).pipe(map((response: Response)=>response.json()),catchError((error:Response)=>{\n     this.errorService.handleError(error);\n     return throwError(error);\n   }))\n }\n\n isLoggedIn() {\n   //proverava da li je token u local storage-u null ili ne(da li je neko prijavljen ili ne)\n  return localStorage.getItem('token') !== null;\n}\n //logout dodajemo samo u servis, i moras u navbaru podesiti za njega deo\n logout(){\n   localStorage.clear(); //cistimo da bismo obrisali token\n   this.changeMessage(1);\n\n }\n}\n\n\n","module.exports = \".tabela{\\r\\n    overflow: hidden;\\r\\n\\t  width: 80%;\\r\\n\\t  margin: 0 auto;\\r\\n  display: table;\\r\\n  padding: 0 0 8em 0;\\r\\n  border: 1px solid rgb(94, 67, 67);\\r\\n  margin-bottom:20px;\\r\\n}\\r\\n.tabela th {\\r\\n    background-color: rgb(218, 185, 164);\\r\\n}\\r\\n.tabela td{\\r\\n    color: rgb(53, 46, 46); text-align:center;\\r\\n}\\r\\n.tabela th, td {\\r\\n    border: 1px solid rgb(100, 33, 33);\\r\\n }\\r\\nh2{\\r\\n    font-weight: 700;\\r\\n    text-align: center;\\r\\n    display: block;\\r\\n    line-height:1em;\\r\\n    padding-bottom: 2px;\\r\\n    padding-top:30px;\\r\\n    color: rgb(70, 61, 63);\\r\\n  }\"","module.exports = \"<h2>Vaše rezervacije</h2>\\n<table class=\\\"table table-bordered table-hover tabela\\\" style=\\\"margin-top:30px;\\\">\\n  <thead class=\\\"thead-light\\\">\\n    <tr>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">#</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Ruta</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Prevoznik</th>\\n      <th class=\\\"text-center\\\" scope=\\\"col\\\">Datum polaska</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let rezervacija of rezervacije; index as i;\\\">\\n      <th class=\\\"text-center\\\" scope=\\\"row\\\">{{i+1}}</th>\\n      <td class=\\\"text-center\\\" >{{rezervacija.destinacija}}</td>\\n      <td class=\\\"text-center\\\">{{rezervacija.prevoznik}}</td>\\n      <td class=\\\"text-center\\\">{{rezervacija.datumPolaska}}</td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport {Ruta} from '../../model/ruta.model';\nimport { Router } from '@angular/router';\nimport {RezervacijeService} from '../../services/rezervacije.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {Rezervacija} from '../../model/rezervacija.model';\n\n@Component({\n  selector: 'app-get-rezervacije',\n  templateUrl: './get-rezervacije.component.html',\n  styleUrls: ['./get-rezervacije.component.css']\n})\nexport class GetRezervacijeComponent implements OnInit {\n\n  public rezervacije:Rezervacija[];\n  constructor(private router:Router, private rezervacijaServ:RezervacijeService) { }\n\n  ngOnInit() {\n    this.rezervacijaServ.getRezervacije().subscribe(data=>{\n      this.rezervacije=data;\n    });\n  }\n  //ovde eventualno jos neke metode ako bude potrebe..\n\n}\n","module.exports = \"\\r\\n.login { \\r\\n\\tposition: absolute;\\r\\n\\ttop: 40%;\\r\\n\\tleft: 50%;\\r\\n\\tmargin: -150px 0 0 -150px;\\r\\n\\twidth:300px;\\r\\n    height:300px;\\r\\n}\\r\\ninput {\\r\\n    border: 1px solid #4d3f9e;\\r\\n    padding: 0 0 0 10px;\\r\\n    font-size: 14px;\\r\\n}\\r\\n.login h1 { color: rgb(53, 46, 46); text-shadow: 0 0 10px rgba(0,0,0,0.3); letter-spacing:1px; text-align:center; }\\r\\n.labela{\\r\\n    letter-spacing:1px; \\r\\n    text-align:center;\\r\\n    color: rgb(53, 46, 46);\\r\\n    text-shadow: 0 0 10px rgba(0,0,0,0.3);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"col-md-3 content login\\\">\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onLoginSubmit()\\\" class=\\\"form-signin\\\">\\n            <img  src=\\\"../assets/slike/bus.png\\\" alt=\\\"\\\" width=\\\"100\\\" height=\\\"100\\\">\\n        <h1 class=\\\"h3 mb-3 pt-3 font-weight-normal\\\">Login</h1>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"labela\\\" for=\\\"email\\\">Email</label>\\n            <input name=\\\"email\\\" type=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" required autocomplete=\\\"email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"labela\\\" for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" required \\n            autocomplete=\\\"current-password\\\">\\n        </div>\\n        <button class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../../model/user.model';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private router:Router, private userService:UserService, private toastr:ToastrService) {  }\n\n  ngOnInit() {\n    this.form=new FormGroup({\n      email: new FormControl(null,[Validators.required,Validators.minLength(5),Validators.email]),\n      password: new FormControl(null,[Validators.required,Validators.minLength(8)])\n\n    });\n  }\n  onLoginSubmit(){\n    const user=new User(\n      this.form.value.email,\n      this.form.value.password\n    );\n    //kada primimo podatke, resetujemo formu, upisujemo korisniku token\n    //data je response ...\n\n    this.userService.login(user).subscribe(data=>{\n      if(data.success==false)\n      {\n        this.toastr.error(data.msg, '',{\n          closeButton:true,\n          positionClass:'toast-top-center'\n        });\n        this.form.reset();\n      }else{\n      this.form.reset();\n      localStorage.setItem('token',data.token);\n      localStorage.setItem('admin',data.user.admin);\n      this.toastr.success('Login successful!','',{\n        closeButton:true,\n        positionClass:'toast-top-center'\n      });\n      this.router.navigate(['/']);\n    }\n    })\n\n  }\n\n}\n","module.exports = \".logo {\\r\\n    margin-top: 105px;\\r\\n    margin-left: 300px;\\r\\n  }\\r\\n\\r\\n  .registration { \\r\\n\\tposition: absolute;\\r\\n\\ttop:10%;\\r\\n    left: 50%;\\r\\n    margin-left:500px;\\r\\n    margin-right:50px;\\r\\n\\twidth:300px;\\r\\n    height:100px;\\r\\n}\\r\\n\\r\\n  h2{\\r\\n    color: rgb(53, 46, 46); text-shadow: 0 0 10px rgba(0,0,0,0.3); letter-spacing:1px; text-align:center;\\r\\n}\\r\\n\\r\\n  input {\\r\\n    margin-top:+20px;\\r\\n    border: 1px solid #e9451c;\\r\\n    padding: 0 20 0 10px;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\n  input:focus{\\r\\n    border: 1px solid #e9451c;\\r\\n    background:white;\\r\\n}\\r\\n\\r\\n  .btn{\\r\\n    background-color:#352b23;\\r\\n    color:#f7f2ef\\r\\n}\"","module.exports = \"\\n<div class=\\\"needs-validation col-md-4 col-md-offset-2 content\\\">\\n    \\n    <img src=\\\"../assets/slike/fastbus.png\\\" alt=\\\"\\\" width=\\\"300\\\" height=\\\"300\\\" class=\\\"logo\\\">\\n    <div class=\\\"registration\\\">\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2>Register</h2>\\n        <div class=\\\"form-group\\\">\\n            \\n            <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"First name\\\" formControlName=\\\"name\\\" autocomplete=\\\"name\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            \\n            <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\" autocomplete=\\\"username\\\">\\n            <div *ngIf=\\\"form.controls['username'].errors && !form.controls['username'].pristine\\\" class=\\\"error-msg\\\">\\n                <div [hidden]=\\\"!form.controls['username'].errors.required\\\">\\n                    Valid username is required.\\n                </div>\\n                <div [hidden]=\\\"!form.controls['username'].errors.minlength\\\">\\n                    Username is too short.\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            \\n            <input type=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"johndoe@example.com\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" autocomplete=\\\"email\\\">\\n            <div *ngIf=\\\"form.controls['email'].errors && !form.controls['email'].pristine\\\" class=\\\"error-msg\\\">\\n                <div [hidden]=\\\"!form.controls['email'].errors.required\\\">\\n                    Valid email is required.\\n                </div>\\n                <div [hidden]=\\\"!form.controls['email'].errors.email\\\">\\n                  Valid email is required.\\n              </div>\\n              </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            \\n            <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" autocomplete=\\\"password\\\">\\n            <div *ngIf=\\\"form.controls['password'].errors && !form.controls['password'].pristine\\\" class=\\\"error-msg\\\">\\n                <div [hidden]=\\\"!form.controls['password'].errors.required\\\">\\n                    Valid password is required.\\n                </div>\\n                <div [hidden]=\\\"!form.controls['password'].errors.minlength\\\">\\n                    Password is too short.\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            \\n                <input type=\\\"password\\\" id=\\\"repeatpassword\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"repeatpassword\\\" autocomplete=\\\"repeatpassword\\\">\\n                <div *ngIf=\\\"form.controls['repeatpassword'].errors && !form.controls['repeatpassword'].pristine\\\" class=\\\"error-msg\\\">\\n                    <div [hidden]=\\\"!form.controls['repeatpassword'].errors.required\\\">\\n                        Please confirm password\\n                    </div>\\n                    <div *ngIf=\\\"form.controls['password'].value!=form.controls['repeatpassword'].value\\\">\\n                            Passwords doesn't match.\\n                          </div>\\n                </div>\\n            </div>\\n        \\n            <hr class=\\\"mb-4\\\">\\n            <button class=\\\"btn btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid||form.controls['password'].value!=form.controls['repeatpassword'].value\\\">Register</button>\\n          \\n        \\n       \\n    </form>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//upravljanje formama i rutiranje\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {User} from '../../model/user.model';\n//uvodimo servis UserService i moras ga injektovati u konstruktor\nimport { UserService } from '../../services/user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: FormGroup;\n  constructor(private router: Router,private userService:UserService,private toastr:ToastrService) { }\n\n  ngOnInit() {\n    \n    this.form = new FormGroup({\n\n      name: new FormControl(null, [Validators.required,Validators.minLength(3)]),\n    \n      username: new FormControl(null, [Validators.required,Validators.minLength(5)]),\n\n      email: new FormControl(null, [Validators.required,Validators.minLength(5),Validators.email]),\n\n      password: new FormControl(null, [Validators.required,Validators.minLength(8)]),\n\n      repeatpassword: new FormControl(null, [Validators.required]),\n      \n  });\n  }\n  onSubmit(){\n    //kreiramo objekat\n    const user=new User(\n      this.form.value.email,\n      this.form.value.password,\n      this.form.value.name,\n      this.form.value.username.toLowerCase(),\n\n      \n    );\n    \n    //RegisterUser\n    //posto je observabla, moramo da se subscribujemo\n    this.userService.register(user).subscribe(data=>{\n    if(data.success==false)\n    {\n        this.toastr.error(data.msg, '',{\n          closeButton:true,\n          positionClass:'toast-top-center'\n        });\n        this.form.reset();\n    }else{\n    //resetujes inpute\n    this.form.reset();\n    this.toastr.success(data.msg, '',{\n      closeButton:true,\n      positionClass:'toast-top-center'\n    });\n    //saljemo korisnika da se loguje\n    this.router.navigate(['/users/login']);\n    }\n    });\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport {GetRezervacijeComponent} from './get-rezervacije/get-rezervacije.component';\n\nconst routes: Routes = [\n          {path: 'login', component:LoginComponent},\n          {path: 'register', component:RegisterComponent},\n          {path:'getrezervacije',component:GetRezervacijeComponent}\n        ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { GetRezervacijeComponent } from './get-rezervacije/get-rezervacije.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  declarations: [LoginComponent, RegisterComponent, GetRezervacijeComponent]\n})\nexport class UsersModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}